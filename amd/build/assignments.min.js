define("local_solsits/assignments",["exports","core_form/modalform","core/str","core/toast"],(function(_exports,_modalform,_str,_toast){var obj;
/**
   * TODO describe module assignments
   *
   * @module     local_solsits/assignments
   * @copyright  2025 Southampton Solent University {@link https://www.solent.ac.uk}
   * @author     Mark Sharp <mark.sharp@solent.ac.uk>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modalform=(obj=_modalform)&&obj.__esModule?obj:{default:obj};_exports.init=()=>{document.querySelectorAll('[data-action="sol-new-duedate"]').forEach((duedate=>{duedate.addEventListener("click",newDueDate)}))};const newDueDate=e=>{e.preventDefault();const element=e.currentTarget,modal=new _modalform.default({formClass:"local_solsits\\forms\\new_duedate_form",args:{sitsref:element.getAttribute("data-sitsref")},modalConfig:{title:(0,_str.get_string)("updateduedate","local_solsits",{title:element.getAttribute("data-title")})},saveButtonText:(0,_str.get_string)("sendmessage","local_solsits"),returnFocus:element});modal.addEventListener(modal.events.FORM_SUBMITTED,(event=>{const data=event.detail;data.error?(0,_toast.add)((0,_str.get_string)(data.error,"local_solsits")):(0,_toast.add)((0,_str.get_string)("duedatethankyou","local_solsits"))})),modal.show()}}));

//# sourceMappingURL=assignments.min.js.map