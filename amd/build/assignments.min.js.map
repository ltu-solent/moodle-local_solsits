{"version":3,"file":"assignments.min.js","sources":["../src/assignments.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module assignments\n *\n * @module     local_solsits/assignments\n * @copyright  2025 Southampton Solent University {@link https://www.solent.ac.uk}\n * @author     Mark Sharp <mark.sharp@solent.ac.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\n\n\nexport const init = () => {\n    const duedates = document.querySelectorAll('[data-action=\"sol-new-duedate\"]');\n    duedates.forEach(duedate => {\n        duedate.addEventListener('click', newDueDate);\n    });\n};\n\nconst newDueDate = (e) => {\n    e.preventDefault();\n    const element = e.currentTarget;\n    const modal = new ModalForm({\n        formClass: 'local_solsits\\\\forms\\\\new_duedate_form',\n        args: {\n            sitsref: element.getAttribute('data-sitsref'),\n        },\n        modalConfig: {\n            title: getString('updateduedate', 'local_solsits', {\n                title: element.getAttribute('data-title')\n            }),\n        },\n        saveButtonText: getString('sendmessage', 'local_solsits'),\n        returnFocus: element,\n    });\n    modal.addEventListener(modal.events.FORM_SUBMITTED, event => {\n        const data = event.detail;\n        if (data.error) {\n            addToast(getString(data.error, 'local_solsits'));\n        } else {\n            addToast(getString('duedatethankyou', 'local_solsits'));\n        }\n\n    });\n    modal.show();\n};\n"],"names":["document","querySelectorAll","forEach","duedate","addEventListener","newDueDate","e","preventDefault","element","currentTarget","modal","ModalForm","formClass","args","sitsref","getAttribute","modalConfig","title","saveButtonText","returnFocus","events","FORM_SUBMITTED","event","data","detail","error","show"],"mappings":";;;;;;;;8JA6BoB,KACCA,SAASC,iBAAiB,mCAClCC,SAAQC,UACbA,QAAQC,iBAAiB,QAASC,sBAIpCA,WAAcC,IAChBA,EAAEC,uBACIC,QAAUF,EAAEG,cACZC,MAAQ,IAAIC,mBAAU,CACxBC,UAAW,yCACXC,KAAM,CACFC,QAASN,QAAQO,aAAa,iBAElCC,YAAa,CACTC,OAAO,mBAAU,gBAAiB,gBAAiB,CAC/CA,MAAOT,QAAQO,aAAa,iBAGpCG,gBAAgB,mBAAU,cAAe,iBACzCC,YAAaX,UAEjBE,MAAMN,iBAAiBM,MAAMU,OAAOC,gBAAgBC,cAC1CC,KAAOD,MAAME,OACfD,KAAKE,sBACI,mBAAUF,KAAKE,MAAO,kCAEtB,mBAAU,kBAAmB,qBAI9Cf,MAAMgB"}